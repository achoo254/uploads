package com.quanly.demo.api;

import javax.validation.Valid;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.quanly.demo.mapper.MapperConvert;
import com.quanly.demo.model.CustomerRoom;
import com.quanly.demo.model.Notify;
import com.quanly.demo.model.dto.CustomerRoomDto;
import com.quanly.demo.service.NotifyService;

@RestController
@CrossOrigin(origins = "*", allowedHeaders = "*")
@RequestMapping("/notify")
public class NotifyController {
	@Autowired
	NotifyService notifyService;
	
	private final ModelMapper modelMapper = new ModelMapper();
	private final MapperConvert mapperConvert = new MapperConvert();
	
	@PostMapping(value = "/post/")
	public Notify save(@Valid @RequestBody Notify notify) {
		return notifyService.save(notify);
	}
	
	@GetMapping(value = "/getAll/{id}")
	public CustomerRoomDto getOne(@PathVariable("id") int id) {
		CustomerRoom customerRoom = customerRoomService.getOne(id);
		if (customerRoom == null) {
			ResponseEntity.notFound().build();
		}
		//Mapped
		CustomerRoomDto customerRoomDto = modelMapper.map(customerRoom, CustomerRoomDto.class);
		
		return customerRoomDto;
	}
}
